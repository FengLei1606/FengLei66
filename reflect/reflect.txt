反射
（1）Class用于操作一个类的属性，方法，构造器。
Class类表示正在运行的java应用程序的类或者接口。
Eg.//根据一个类的全名字符串获得一个类的类对象
Class<?> clazz=class.forname(“java.lang.String”);
//获得String类里面传过来的所有方法
Method[] methods=clazz. getEnclosingMethod()
获取一个类对象的里面的内容：
package com.fl.FanShe;

import java.lang.reflect.Constructor;
import java.lang.reflect.Field;
import java.lang.reflect.Method;

public class Test {
   public static void main(String[] args) throws ClassNotFoundException{
	   //(1)根据一个类的全名字符串来获得一个类的对象
	   Class<?> clazz=Class.forName("java.lang.String");
	   //获得一个类的所有方法
	   Method[] methods=clazz.getDeclaredMethods();
	   //通过for循环来实现输出这些方法
	   for(Method m:methods){
		   System.out.println(m);
	   }
	   System.out.println("-----------------------------------");
	  
	   //(2)根据一个类的全名字符串来获得一个类对象的全部属性
	   Field[] fields=clazz.getDeclaredFields();
	   for(Field f:fields){
		   System.out.println(f);
	   }
	    
	   System.out.println("-----------------------------------");
	   //(3)根据一个类的全名字符串来获得一个类对象的全部构造器
	   Constructor<?>[] cs=clazz.getConstructors();
	   for(Constructor c :cs){
		   System.out.println(c);
	   }
//（4）获取到一个具体的属性
Field filed =clazz.getDeclaredMethod(“这个类中的这个属性的具体属性名”);
System.out.println(field);
//(5)获得这个类的某个具体的方法
Method method=clazz. getDeclaredMethod

   
     }
   }

（2）获取一个class类的三种方式
   a.知道一个类的字符串获得这个类里面的全部信息
   b.知道一个对象，把这个对象传给一个反射类获得该对象类全部信息
   c.知道一个类，然后在主程序里面调用这个反射类获得全部信息。
Public class Reflect{
  Public static void main(String[] args) throws Exception{
Class<?> calss=Class.forName(“com.fl.reflect”);
//获得构造器
Constructor<?>constructor=class.getDeclaredConstructor(new Class[]{});
//根据类的默认构造器获得一个对象
Object instance=constructor.newInstance(new Object[]{});
System.out.println(instance);
}

//不使用类的默认构造器，使用自己创建的含参数的构造器创建对象。
Constructor<?>constructor=class.getDeclaredConstructor(new Class[]{Integer.class,String 参数1，String 参数2});
Object instance=constructor.newInstance(new Object[]{1，参数1，参数2});
System.out.println(instance);
}


通过反射的方式拷贝对象
一、	在Class类中要掌握的方法
（1）Static Class<？>  forName（String classname）:返回与带有给定字符串的类或者接口相关的Class对象
（2）Field getDeclaredField(String name):返回一个field对象，该对象反映此class对象的所表示的类或接口
     的指定已经声明的字段
（3）Field getDeclaredFields():返回field对象的一个数组。这些对象反映此class对象的所表述的
    类或者接口所声明的所有字段
（4）Method  getdeclareMethod
    (String name,Class<?>…parameterTypes)返回一个method对象，该对象反映此class对象
    所表示的类或者接口的指定已声明的方法
（5）Constructor 类要掌握的方法
    NewInstance(Object… initargs):使用constructor对象表示的构造方法来创建该构造方法的
    声明类的新实例，并用指定的初始化参数初始化该实例
